/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppChart {
        "data": expenseType[];
    }
    interface AppForm {
    }
    interface AppItem {
        "amount": string;
        "date": string;
        "description": string;
        "idEl": string;
    }
    interface AppList {
    }
    interface AppRoot {
    }
    interface UiButton {
        "buttonType": string;
        "disabled": boolean;
        "text": string;
    }
    interface UiThemeToggle {
    }
}
export interface AppItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAppItemElement;
}
export interface UiButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLUiButtonElement;
}
declare global {
    interface HTMLAppChartElement extends Components.AppChart, HTMLStencilElement {
    }
    var HTMLAppChartElement: {
        prototype: HTMLAppChartElement;
        new (): HTMLAppChartElement;
    };
    interface HTMLAppFormElement extends Components.AppForm, HTMLStencilElement {
    }
    var HTMLAppFormElement: {
        prototype: HTMLAppFormElement;
        new (): HTMLAppFormElement;
    };
    interface HTMLAppItemElement extends Components.AppItem, HTMLStencilElement {
    }
    var HTMLAppItemElement: {
        prototype: HTMLAppItemElement;
        new (): HTMLAppItemElement;
    };
    interface HTMLAppListElement extends Components.AppList, HTMLStencilElement {
    }
    var HTMLAppListElement: {
        prototype: HTMLAppListElement;
        new (): HTMLAppListElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLUiButtonElement extends Components.UiButton, HTMLStencilElement {
    }
    var HTMLUiButtonElement: {
        prototype: HTMLUiButtonElement;
        new (): HTMLUiButtonElement;
    };
    interface HTMLUiThemeToggleElement extends Components.UiThemeToggle, HTMLStencilElement {
    }
    var HTMLUiThemeToggleElement: {
        prototype: HTMLUiThemeToggleElement;
        new (): HTMLUiThemeToggleElement;
    };
    interface HTMLElementTagNameMap {
        "app-chart": HTMLAppChartElement;
        "app-form": HTMLAppFormElement;
        "app-item": HTMLAppItemElement;
        "app-list": HTMLAppListElement;
        "app-root": HTMLAppRootElement;
        "ui-button": HTMLUiButtonElement;
        "ui-theme-toggle": HTMLUiThemeToggleElement;
    }
}
declare namespace LocalJSX {
    interface AppChart {
        "data"?: expenseType[];
    }
    interface AppForm {
    }
    interface AppItem {
        "amount"?: string;
        "date"?: string;
        "description"?: string;
        "idEl"?: string;
        "onItemDelete"?: (event: AppItemCustomEvent<any>) => void;
        "onItemEdit"?: (event: AppItemCustomEvent<any>) => void;
    }
    interface AppList {
    }
    interface AppRoot {
    }
    interface UiButton {
        "buttonType"?: string;
        "disabled"?: boolean;
        "onButtonClicked"?: (event: UiButtonCustomEvent<any>) => void;
        "text"?: string;
    }
    interface UiThemeToggle {
    }
    interface IntrinsicElements {
        "app-chart": AppChart;
        "app-form": AppForm;
        "app-item": AppItem;
        "app-list": AppList;
        "app-root": AppRoot;
        "ui-button": UiButton;
        "ui-theme-toggle": UiThemeToggle;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-chart": LocalJSX.AppChart & JSXBase.HTMLAttributes<HTMLAppChartElement>;
            "app-form": LocalJSX.AppForm & JSXBase.HTMLAttributes<HTMLAppFormElement>;
            "app-item": LocalJSX.AppItem & JSXBase.HTMLAttributes<HTMLAppItemElement>;
            "app-list": LocalJSX.AppList & JSXBase.HTMLAttributes<HTMLAppListElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "ui-button": LocalJSX.UiButton & JSXBase.HTMLAttributes<HTMLUiButtonElement>;
            "ui-theme-toggle": LocalJSX.UiThemeToggle & JSXBase.HTMLAttributes<HTMLUiThemeToggleElement>;
        }
    }
}
